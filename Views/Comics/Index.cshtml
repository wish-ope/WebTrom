@model IEnumerable<WebTruyen.Models.Comic>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đọc Truyện Tranh</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }

        .comic-gallery {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .comic-item {
            min-width: 1%; 
            box-sizing: border-box;
            padding: 5px;
        }

        .container {
            position: relative;
            width: 100%;
            overflow: hidden;
        }

        .image-champ {
            width: 100%;
            height: auto;
            object-fit: cover;
            transition: transform 0.7s;
        }

            .image-champ:hover {
                transform: scale(1.1);
                border: 2px solid rgba(133, 134, 50, 0.877);
            }

        .copy_xxN7 {
            position: absolute;
            right: 0;
            bottom: 0;
            left: 0;
            background-color: rgba(40, 40, 43, 0.9);
            border-top: 1px solid #927345;
            padding: 5px;
            text-align: center;
            font-size: 9px; /* Adjusted font for compactness */
            color: rgba(255, 255, 59, 0.877);
            transition: .4s;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

            .copy_xxN7 h1 {
                color: #fff;
                font-size: 11px; /* Reduced font size */
                margin: 0;
            }

        .latest-chapter {
            display: none;
            font-size: 8px;
            color: rgba(255, 255, 255, 0.8);
            margin-top: 3px;
        }

        .comic-item:hover .latest-chapter {
            display: block;
        }

        .carousel {
            overflow: hidden;
            position: relative;
            width: 100%; /* Giữ nguyên chiều rộng 100% cho carousel */
            height: 200px; /* Chiều cao cố định */
        }

        .carousel-inner {
            display: flex;
            transition: transform 0.5s ease;
            width: max-content;
        }

            .carousel-inner .comic-item {
                flex: 0 0 4%; /* Đặt kích thước cho mỗi comic-item để hiển thị 5-6 ảnh */
                box-sizing: border-box;
                padding: 0 5px; /* Khoảng cách giữa các ảnh */
                height: 100%; /* Chiều cao bằng với chiều cao của carousel */
            }
           

        .carousel-item {
            display: flex;
            justify-content: space-between;
            min-width: 100%;
        }

            .carousel-item img {
                width: 100%; /* Ensure the image occupies full width */
                border-radius: 10px;
            }

        .carousel-button {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background-color: rgba(255, 255, 255, 0.5);
            border: none;
            cursor: pointer;
            padding: 5px;
            font-size: 14px;
        }

        .prev {
            left: 10px;
        }

        .next {
            right: 10px;
        }
    </style>


</head>
<body>

    <h1> Truyện đề cử </h1>
    <div class="carousel">
        <div class="carousel-inner">
            @for (int i = 0; i < Model.Count(); i++)
            {
                var comic = Model.ElementAt(i);
                <div class="comic-item">
                    <a href="/Comics/Detail?title=@comic.Title">
                        <div class="container">
                            <img src="@comic.Cover" class="image-champ" alt="@comic.Title Cover" loading="lazy" />
                            <div class="copy_xxN7">
                                <h1>@comic.Title</h1>
                                <p class="latest-chapter">Latest Chapter: @comic.LatestChap</p>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
        <button class="carousel-button prev" onclick="moveSlide(-1)">&#10094;</button>
        <button class="carousel-button next" onclick="moveSlide(1)">&#10095;</button>
    </div>



    <h1>Truyện mới cập nhật</h1>
    <div class="comic-gallery">
        @foreach (var comic in Model)
        {
            <div class="comic-item">
                <a href="/Comics/Detail?title=@comic.Title">
                    <div class="container">
                        <img src="@comic.Cover" class="image-champ" />
                        <div class="copy_xxN7">
                            <h1>@comic.Title</h1>
                            <p>Latest Chapter: @comic.LatestChap</p>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
   

   
    <script>
        let currentIndex = 0;
        const totalItems = document.querySelectorAll('.carousel-inner .comic-item').length;
        const itemsPerView = 8;
        const itemWidth = 12.5; // Percentage width of each item (100% / 8 items per view)

        function moveSlide(direction) {
            // Update currentIndex with wrap-around behavior
            currentIndex += direction;
            if (currentIndex < 0) {
                currentIndex = totalItems - itemsPerView;
            } else if (currentIndex > totalItems - itemsPerView) {
                currentIndex = 0;
            }

            // Slide by adjusting the transform property based on current index
            document.querySelector('.carousel-inner').style.transform = `translateX(-${currentIndex * itemWidth}%)`;
        }

        document.addEventListener("DOMContentLoaded", function () {
            const copyElements = document.querySelectorAll('.copy_xxN7');
            let maxHeight = 0;

            // Find the maximum height of all .copy_xxN7 elements
            copyElements.forEach(el => {
                const height = el.offsetHeight;
                if (height > maxHeight) maxHeight = height;
            });

            // Set each .copy_xxN7 element to the maximum height
            copyElements.forEach(el => {
                el.style.height = maxHeight + 'px';
            });
        });

    </script>


</body>
</html>
